* Week 11
[2016-10-04 Tue 13:42]
Congratulations on making it to the eleventh and final week! This week, we will walk you through a complex, end-to-end application of machine learning, to the application of Photo OCR. Identifying and recognizing objects, words, and digits in an image is a challenging task. We discuss how a pipeline can be built to tackle this problem and how to analyze and improve the performance of such a system.
** Photo OCR
[2016-10-04 Tue 13:43]
*** Problem Description and Pipeline
[2016-10-04 Tue 13:43]
ML pipeline example. Focus is on how to recognize/read text in pictures. Need to detect regions with text, then read/transcribe the text in the regions. Steps in the pipeline:
1. Text detection
2. Character segmentation
3. Character classification
*** Sliding Windows
[2016-10-04 Tue 13:43]
Start by looking at simpler example, pedestrian detection. Aspect ratio for what a person is, then use supervised learning (y = 0 and y = 1).

Once trained, take your aspect window and start in top left, and analyize region. Then shift over slightly (step size), and reanalyze. Then once done, take a larger chunk and run through pipeline, and repeat this process for a few cycles.

To map to text detection -- start with training set (positive and negative). Find regions where you think you have text, then find ``expansion'' regions (is one set of white pixels/found text within x pixels of another set of found text?). Now, we can look for long stretches of white where we probably have text. Now, cut out regions with text, and run second training looking at images showing segmentation between characters, and then repeat the sliding window process, now you've identified the boundaries (positive identifiers) between your letters.

We've already done examples showing the ML for character identification.
*** Getting Lots of Data and Artificial Data
[2016-10-04 Tue 13:43]
One of best ways to do ML is get a low bias algorithm, and then run large amounts of data through it. How to get large data sets? Can generate data, or take a smaller training set and then amplify it.

For OCR, could just take font libraries and then use that to create large data sets.

Introduce distortions (image based, sound/noise based).

Be careful not to just add random noise.

Key is to make sure you have a low bias classifier (plot learning curves).
*** Ceiling Analysis: What Part of the Pipeline to Work on Next
[2016-10-04 Tue 13:43]
How to decide where to spend your time when looking at a pipeline?

Start with overall accuracy of the pipeline.

Start simulating what happens if a component were to be 100% accurate (feed sets that are already labeled), then evaluate the rest of the pipeline to see how the overall accuracy of the pipeline improves.


